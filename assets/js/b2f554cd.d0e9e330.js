"use strict";(self.webpackChunkhome=self.webpackChunkhome||[]).push([[477],{10:function(e){e.exports=JSON.parse('{"blogPosts":[{"id":"programming-is-a-creative-skill","metadata":{"permalink":"/blog/programming-is-a-creative-skill","source":"@site/blog/programming-is-a-creative-skill.mdx","title":"Programming is a creative skill","description":"I\'ve seen a lot of absolute beginners struggle to find their bearings around programming.","date":"2022-07-03T21:55:58.000Z","formattedDate":"July 3, 2022","tags":[],"readingTime":6.165,"truncated":true,"authors":[],"frontMatter":{"slug":"programming-is-a-creative-skill","title":"Programming is a creative skill","tags":[]},"nextItem":{"title":"Don\'t ask for advice, ask for support","permalink":"/blog/dont-ask-for-advice"}},"content":"I\'ve seen a lot of absolute beginners struggle to find their bearings around programming.\\nThere\'s so much noise (from lots of YouTube tutorial to Twitter threads).\\nBut the pattern they\'re able to recognize from all these are that people know what they\'re doing.\\n\\n\x3c!-- truncate --\x3e\\n\\n## The cheat code\\n\\nIt appears the people they look up to have understood the formula. They\'ve figured out some cheat code.\\n_\\"Look at how everything comes easy to them. Gods!\\"_ Even as an experienced developer, I\'ve had times like these\\nwhen I watch people post and talk on advanced techniques.\\n\\nI believe this is because behind every nice and perfectly put content, there\'s no tag like\\n`10 failures, 4 misconceptions, 3 breaks`. There\'s simply the content.\\n\\nOur mind is not in the business of worrying about that - only cares about becoming masters too.\\n\\n## A creative skill\\n\\nLet\'s do some exercises.\\n\\n1. Pick one of the best songs from one of your favorite artists. Do you think he/she came back from lunch one afternoon,\\nwent to the studio and created a bang?\\n\\n2. How long do you think it took Da Vinci to paint the Mona Lisa? Why did it take that long to paint a portrait on such\\na small canvas? Wasn\'t he a master?\\n\\n#### So what is a creative skill?\\n\\nA creative skill is about creating a personalized version of some reality.\\nThis personal_ized_ version only has vague ideas of how the original is made or looks like but\\nnot a complete a deviation from what it is.\\n\\nThis means that, if you used a lot of assumptions in creating this version, that\'s creative.\\n\\nIf you even modified the original idea by 1%, that\'s creative. The craziest form of creativity\\nare those that combine a number of different _realities_ (seemingly unrelated to each other) to create something that\'s\\nstill relatable.\\n\\n> I doubt any creative artifact is 100% (or even 90%) original\\n\\n#### What\'s common about any form of creative skill?\\n\\nThe answer is that, there\'s not a definitive way of getting everything done. Your favorite artist definitely has\\nalready created hundreds of songs before this. Shouldn\'t it be way easier to create bangers back-to-back with far less\\neffort?\\n\\nThe answer is no. The idea is to create [new versions] of songs that wouldn\'t sound like something we\'ve heard before.\\nSurely, that must require some ingenuity and wouldn\'t use the exact composition as the last hit.\\n\\nContrast this with financial accounting, for example. It\'s simple, credit what comes in, debit what goes out.\\nYes, there\'ll be different forms transactions but there\'s a finite set of rules to follow. You can\'t choose to credit\\nbased on your feelings - you\'ll get into trouble.\\n\\n> Freedom. That\'s what separates creative from non-creative skills.\\n\\nSo what has all these blabbing got to do with programming?\\n\\n## Programming\\n\\nHow\'s programming a creative skill? Let\'s take messaging apps for example. I\'m confident you can mention at least\\nthree different apps. Even though they all offer the basic functionalities of communicating with people (or bots), their\\nrespective creators tried to do or add something different. Something they think is cool or important or simply prefer.\\n\\nJust like an artist will produce a song that millions of people will love, the same goes for an app.\\nThis custom version of an app will also be loved by many people.\\n\\nNow this custom version doesn\'t have to be radically different. Sometimes, it can just be an addition of a single\\nfeature that the original idea may be lacking. This feature can be a selling point - one that a lot of people will\\nbe willing to switch over.\\n\\nUnderstanding this is vital to keep you going as a beginner. I\'ve had a lot of people complain to me about being\\nconfused on what the next steps after learning a language\'s basics are. The answer is simple, be creative.\\nThat tutorial you completed, do it again all by yourself. This time, do something different. Personalize it.\\n\\nChange colors or layouts. Host it. Add a missing feature! That\'s basically it. This exercise is an attempt to test\\nyour understanding of the _vocabularies_ you learn and to train your mind on how to use what you learn\\nin different ways guided by your imagination.\\n\\n## Vocabularies\\n\\nVocabularies in a natural language (like English) means words or combinations of words you can use to express thoughts.\\nBeing able to play with words while being able to express an idea clearly shows your mastery of the language.\\nLet\'s take the phrase \\"he dropped on the floor like a sack of potatoes\\". A non-English (or a toddler) speaking\\nperson learning English will simply say \\"he fell\\". This is obvious. Why?\\nBecause they do not know a lot of words or idioms. But with time and learning, they come to know all of these.\\n\\nAlso, having a huge bank of vocabularies is what separates a mediocre artist from a very good one. You listen and you\\nsmile.\\n\\n> Vocabularies exist in all forms of creativity.\\n\\nThe same concept applies to programming. As you learn, you should be picking up vocabularies to express your ideas.\\nFor example, say you learned how to use `for` loops to print numbers from 1 to 10, you can build on this _vocabulary_\\nto print the multiples of 3. You could also use the idea to find something in an array/list. How? Can you try being\\ncreative?\\n\\nSo as you learn any concept in programming, pick it up as a vocabulary and try to imagine (or test) how you can be\\ncreative with it in a different scenario.\\n\\n\\n## Failures and straight lines\\n\\nOne thing beginners dread is failure.\\n\\nIf something goes wrong it\'s hard. It simply shows they\'re not smart to understand something somewhat obviously simple.\\nThis is a wrong mindset. Pick up a new natural language like French or Spanish for example. You\'ll experience this\\nsame kind of difficulty.\\n\\nIt\'s just natural for new things to feel difficult at first. Remember learning to ride a bike?\\n\\nFailures are double-edged swords. On one side, they teach you how to not do something. On the other hand, _that way not\\nto do something_ is a way to do something else. At the end of the day, you learn something that can be used in future\\nwhile trying to make things work.\\n\\n\\n## Form principles\\n\\nForming good principles around learning programming will help you become a good developer in the long term.\\nThese are things you can come up with by yourself with experience, but I\'ll share some of mine:\\n\\n- Always reference official documentations first. It\'s tempting to be in a hurry and only search for direct answers\\n  from Stackoverflow. This is detrimental in the long run. Answers you find on Stackoverflow are mostly answers to\\n  common problems. As you advance, the probability of finding answers on Stackoverflow shrinks significantly\\n  (to almost zero). Learning to navigate through official docs will be your greatest asset.\\n\\n- Draw solutions in a notebook before attempting to code it. Being able to map out your thought process on paper\\n  tests your understanding of the problem and solution to use. Going to straight to your screen to brute-force your\\n  solution will lead you nowhere.\\n\\n- Be open-minded to different options to a tech. It\'s good to try out the options and understand what strengths and\\n  weaknesses they offer."},{"id":"dont-ask-for-advice","metadata":{"permalink":"/blog/dont-ask-for-advice","source":"@site/blog/2022-06-14-dont-ask-for-advice.md","title":"Don\'t ask for advice, ask for support","description":"Probably sounds confusing. But this is the best advice you\'ll get. \ud83d\ude05","date":"2022-06-14T00:00:00.000Z","formattedDate":"June 14, 2022","tags":[],"readingTime":3.76,"truncated":true,"authors":[],"frontMatter":{"slug":"dont-ask-for-advice","title":"Don\'t ask for advice, ask for support","tags":[]},"prevItem":{"title":"Programming is a creative skill","permalink":"/blog/programming-is-a-creative-skill"},"nextItem":{"title":"What I told my younger brother on our way to admit him into SHS","permalink":"/blog/advice-to-my-brother"}},"content":"Probably sounds confusing. But this is the best _advice_ you\'ll get. \ud83d\ude05\\n\\n\x3c!-- truncate --\x3e\\n\\nWeeks ago, a friend in the States reached out to me about choosing between a coding bootcamp (his father is willing to\\nsponsor) and becoming an automotive \ud83c\udfc1 apprentice. A short background about my friend, Nick, is that he really likes cars.\\nIf you follow him on Instagram, you\'ll understand his obsession about sport cars especially. He just graduated from\\nhigh school and is waiting to get into college.\\n\\nIn the meantime, he needs to spend his _vacation_ wisely.\\n\\nHis dad, being totally convinced software engineering really pays, does not offer his sponsorship on the merit Nick\'s\\npassion but for what he _imagines_ is the right thing for Nick to do (for his future).\\n\\nThis places Nick in the position of having to defend his passion for cars or simply enrol into the bootcamp.\\n\\n_The automotive apprenticeship was free._\\n\\n## Bias\\n\\nIf you were in my shoes - having to respond/advise Nick, what would you tell him to do? Take a second to think about it.\\n\\nSaying \\"Bro, do what you want\\" is not an option. It\'s equivalent to you saying nothing at all or if he never reached out.\\nYou\'ve got to help him pick a side.\\n\\nWithout thinking much, this is easy. There are two options:\\n\\n- I can use my experience and benefits as a software developer to make him choose what his dad is offering\\n\\n- I can use the passion that drove me into tech as an example for Nick to stick with his\\n\\nIn either cases, there\'s bias. Bias from my own experiences. We (or I) can only speak of the world as we perceive it.\\nBut Nick is here for an answer God would give!\\n\\n## Advisee\\n\\nWe\'ve all been in situations where we have to choose between [seemingly] equally balanced choices. \\nIn my experience, this happens when we\'re trying to apply logic all the way. \\nBut with the switch turned off on logic, we can choose.\\n\\nWhat I\'m trying to say is that we mostly do know what we want, but remain indecisive because we fear \\njudgement or think we\'ll lose favor from people (who care about us) that had different expectations about us.\\n\\nBut when we ask advice for what to choose from other people (with the expectation of some magic words), \\nwe put them in a situation of overwhelming responsibility of our lives where when their suggestion goes wrong\\nthey\'re mostly to blame for (or carry the guilt).\\n\\nRather, can we ask for support? Can we ask for help with what we decide?\\n\\nIf it\'s for the fear of failing that we want a [supposedly] expert/neutral advice, what\'s the guarantee the \\nadvisor is going to be right?\\n\\nAny advice given will still send you back dealing with stuff on your own. In such cases, it\'s easy to take [almost] \\nall the credit when there\'s success or assign blame when there\'s a failure.\\n\\nWith support on the other hand, you\'re asking the person to help with the choice you\'ve made. \\nTo chip in when they can. To share their resources and perspectives - all while keeping you in absolute control.\\nIn this case you don\'t leave the advisor worthless when you don\'t take their advice anyway.\\n\\n> Not all advice are meant to be taken though. And advisors don\'t have to be disappointed.\\n\\n## Advisor\\n\\nIf you\'ve been asked to help someone make a decision before, you can remember that you have always \\nhesitated to give a direction. And even when you do, you keep highlighting how unsure you can be about\\na couple of stuff.\\n\\nIt\'s simply difficult.\\n\\nAnd people don\'t take the advice anyway. Well, mostly!\\n\\nLet\'s run a revolution. Let\'s ask _advisees_ to choose and then offer our support. \\nLet\'s not attempt to skew their judgement in any way.\\n\\nThis way feels like an invitation to truly help and to feel less guilty when things don\'t turn out right.\\n\\n## Support\\n\\nThe idea I want to pass along is that lets not ask for advice (in most cases), because it\'s a very heavy burden on the \\nadvisor.\\n\\nAsking for support means you\'re convicted in your choice and any form of help can really push you farther ahead.\\nIf you don\'t believe in a choice you\'re about to make, who will? If you\'re not going to go with what\'s advised, why ask?\\nIf the advisor wouldn\'t be there while you go through it, what\'s the point?"},{"id":"advice-to-my-brother","metadata":{"permalink":"/blog/advice-to-my-brother","source":"@site/blog/2022-05-29-advise-to-my-brother.md","title":"What I told my younger brother on our way to admit him into SHS","description":"Three weeks ago, I had to send my younger brother to boarding school. It was a long ride - almost 2 hours long.","date":"2022-05-29T00:00:00.000Z","formattedDate":"May 29, 2022","tags":[],"readingTime":3.03,"truncated":true,"authors":[],"frontMatter":{"slug":"advice-to-my-brother","title":"What I told my younger brother on our way to admit him into SHS","tags":[]},"prevItem":{"title":"Don\'t ask for advice, ask for support","permalink":"/blog/dont-ask-for-advice"},"nextItem":{"title":"I should have written tests","permalink":"/blog/i-should-have-written-tests"}},"content":"Three weeks ago, I had to send my younger brother to boarding school. It was a long ride - almost 2 hours long.\\nSo that was an opportunity to plant some seed into his head.\\n\\n\x3c!-- truncate --\x3e\\n\\nI actually started off by stating that he didn\'t need to listen to me because normally, \\npeople know what they want and advice means nothing in a lot of cases. But I was going to talk anyway, \\nand it\'s up to him to take it or leave it.\\n\\nWhat did I say?\\n\\n## Friendships and fun\\n\\nWhen I was in class 5, I had a friend who always talked about becoming an engineer. \\nHe would want to invent this or that. From my memory, I liked to listen to him. \\nI had inspiration from a lot of stuff he used to say. Even though there were little to no access to \\nengineering materials, my imagination became useful. I started having ideas too. \\nI started drawing futuristic devices.\\n\\n> Ideas came from Sci-fi movies too. I would pay attention to the cool stuff, draw them later and imagine\\n> the process it would involve to make them. (I knew zero about computers at this time - never held one.)\\n\\nI don\'t remember the name<sup>1</sup> of this friend of mine, but he was definitely smarter and more ambitious than I was.\\nI don\'t know where he is right now but where I am now is evidence of the impact of having good friendships.\\n\\nSo I encouraged my brother to make good friends, especially with people better than him. \\nThere\'s this saying - _when you\'re among three idiots, you become the fourth idiot and if you\'re among 3 smart people, \\nyou become the fourth smart person_.\\n\\nI also asked him to engage in sports, be competitive and always win. This is to boost his confidence by the time he\'s \\nout of Senior High.\\n\\n## Leadership\\n\\nI wanted him to pick up leadership roles. I didn\'t give him any reason why he should but this was merely \\nto teach him about being responsible.\\n\\nGiven that he was the class prefect for his class during Junior High School, I believe he has some \\nleadership qualities, and I wanted him to nurture them.\\n\\n> We need more leaders (or people with leadership qualities) in this country.\\n\\n## Hard work and integrity\\n\\nI know he must have heard the controversy around the education system - going to school doesn\'t guarantee you\'ll get a \\njob or even become successful. _I agree_. So it makes sense not to take school seriously.\\n\\nBut why should he? My brother (15 yo) does not run a business or take care of a family. \\nHe simply has to go through school, implying that he needs to study. \\n\\nNow, since all he has to do is study, doing that well and passing his tests shows a sign of goodwill. \\nIt shows that given any situation he\'s going to give out his best and that being good at one thing translates \\ninto being good at many other things.\\n\\nIt shows that given another chance at something else, it\'ll be easier for me (or anybody else) to trust that he\'s going \\nto excel.\\n\\nI told him studying hard and doing well at school will create an image of integrity in the eyes of his colleagues \\nand teachers, and he\'s going to be respected for that.\\n\\n<br />\\n\\n\u2026\\n\\n<br />\\n\\nThat\'s it. I hope these seeds fell on fertile soil. \\nI\'ve got high hopes for what/who he\'ll become after completing school. I wish him good luck.\\n\\n---\\n\\n<small><sup>1</sup> I vaguely remember he\'s called Prince.</small>"},{"id":"i-should-have-written-tests","metadata":{"permalink":"/blog/i-should-have-written-tests","source":"@site/blog/2022-05-24-i-should-have-written-tests.md","title":"I should have written tests","description":"As a freelancer working (solo mostly) on a number of gigs at the same time, the least interesting to do is to write","date":"2022-05-24T00:00:00.000Z","formattedDate":"May 24, 2022","tags":[],"readingTime":4.165,"truncated":true,"authors":[],"frontMatter":{"slug":"i-should-have-written-tests","title":"I should have written tests","tags":[]},"prevItem":{"title":"What I told my younger brother on our way to admit him into SHS","permalink":"/blog/advice-to-my-brother"},"nextItem":{"title":"Delegation","permalink":"/blog/delegation"}},"content":"As a freelancer working (solo mostly) on a number of gigs at the same time, the least interesting to do is to write\\ntests. That discipline is not worth the investment. It\'s an MVP, needs to be ready in two or three months.\\nHow does automated tests save me time \u23f0?\\n\\n\x3c!-- truncate --\x3e\\n\\nThis had been an _implicit reasoning_<sup>1</sup> for me in the past. I understood it made sense to write\\nthem, but it takes a lot more hours to author them - when I could use that same time writing the rest of the features.\\nWhat I used to do as a compromise is to write tests for a few critical features.\\n\\n## Functional and OK\\n\\nNow I designed these few _critical_ tests in a way that if any broke, it could have been caused from many possible\\nplaces. I labelled these tests as functional tests. For example, testing the login process, or an item upload, etc.\\n\\nThis is okay. _You can\'t tell me otherwise_. It\'s better than no [automated] tests at all. But the issue with\\nfunctional tests from my experience is that it\'s easy to miss edge cases (or simply ignore them and focus\\non what should work). In fact, it\'s messy writing this type of tests because _arranging_ the test takes long lines code.\\n\\nWorse of all with this approach is that, it doesn\'t force you to arrange/structure your codebase properly. You have the\\nfreedom to make one function do _20 billion_ different things.\\n\\nDon\'t get me wrong. I understand separation of concerns, single responsibility, yiddih yaddah. You can know all these\\nand still have a terrible codebase. You could _innocently_ assume a logic needs to exist in source `A` but good testing\\ntechniques/discipline will have you extracting relevant code into separate sources.\\n\\n## UI, test UI?\\n\\nHow do you expect me to write code for that when I\'m already clicking around and testing [manually] already? What\'s\\ngoing to take me by surprise? Yes, I also used to think like this.\\n\\nAnother reason I was convicted in not writing UI tests is that I imagined the setup and execution process will \\nbe overwhelming. Questions like doesn\'t the test framework have to spawn a browser or an emulator. \\nWouldn\'t it take a lot of time to run these tests.\\n\\nYes I had those questions as a way to confirm my bias. Therefore, I didn\'t want to bother finding answers.\\n\\n## What happened?\\n\\nI launched [Adeton](https://adeton.io).\\n\\nThat\'s what happened.\\n\\n\u2705 Few functional tests.\\n\\n\u2705 No UI tests.\\n\\nThe app was good. Worked *fl-*flawless. Few months in, all good; with the few bug fixes I was consistently making.\\nUntil I needed to update the pricing calculation. Until I needed change the shop deployment strategy.\\nUntil I needed to add theming capabilities. Until I needed to add _forgot password_<sup>2</sup>.\\n\\nWhat are the guarantees I had not broken another part of the app or the API while working on any of these? You can\\nguess the answer to that.\\n\\n> Had I known\u2026\\n\\n\\n## Units\\n\\nIt was when I joined my current company/workplace ([Varsity Tutors LLC](https://varsitytutors.com)) that I got to \\nexperience the benefit of unit testing. It is required [over here] to test every single line of code and this was \\nmade sure by counting code coverage<sup>4</sup>.\\n\\nI work primarily at the frontend, and we write tests for UI (geeezz \ud83d\ude2c). I began to appreciate the effort for writing \\nthese tests. I spend time writing and testing a feature at a time, knowing well (almost guaranteed) that other \\nexisting tests will catch any breaking change I make.\\n\\nThe long term benefit is very huge. I don\'t have to test the whole application by hand to guarantee everything works \\nperfectly just because I changed or added a few lines of code.\\n\\nSo around the whole of November and half of December last year, I spent my evenings rearranging and writing unit tests \\nfor the backend API of Adeton. My confidence level for this codebase has risen tremendously. \\nAbout the frontend, it\'s still a work-in-progress.\\n\\n## Changes\\n\\nIf you\'re in the habit of building building building, it\'s easy to dismiss automated tests. But software development,\\nwhich is a vector of programming and time<sup>3</sup>, requires you to set up your code in a way that anticipates \\nchange.\\n\\nOne way to guarantee a safe/robust system after changes or upgrades is to put in place best testing practices like \\nunit testing (primarily) in combination with other testing methods.\\n\\nI\'m changed. I treat tests as sacred now.\\n\\nAll the best!\\n\\n---\\n\\n<small><sup>1</sup> I made this term up to describe a case where the reason you do something hasn\'t been placed under\\nlogical scrutiny.</small>\\n<br />\\n<small><sup>2</sup> Yes Adeton shipped with no \\"Forgot Password\\" until about 4-5 months later. Haha. By then we had about\\n300 users.</small>\\n<br />\\n<small><sup>3</sup> I mean software development is a very dynamic process that involves lots of changes with time.\\nIt\'s not just about programming.</small>\\n<br />\\n<small><sup>4</sup> Definitely not manually. We use jest.</small>"},{"id":"delegation","metadata":{"permalink":"/blog/delegation","source":"@site/blog/2022-05-22-delegation.md","title":"Delegation","description":"Save money \ud83d\udcb5 or save time. You can\'t save both.","date":"2022-05-22T00:00:00.000Z","formattedDate":"May 22, 2022","tags":[],"readingTime":3.3,"truncated":true,"authors":[],"frontMatter":{"slug":"delegation","title":"Delegation","tags":[]},"prevItem":{"title":"I should have written tests","permalink":"/blog/i-should-have-written-tests"},"nextItem":{"title":"Remote work and the possibilities for youths in developing countries","permalink":"/blog/remote-work-developing-countries"}},"content":"Save money \ud83d\udcb5 or save time. You can\'t save both.\\n\\n\x3c!--truncate--\x3e\\n\\nI do a lot recently. I lead two active projects<sup>1</sup> part-time and have a full-time frontend developer role to\\ndeal with. Meanwhile, I have in the pipeline another startup I want to set up. \\nAnd I like to try new stuff like experimenting.\\n\\nMy responsibilities are growing. But the size of the time to use remains the same every day - 24hours.\\n\\n## Past attempts\\n\\nIn the past, I used to cut out social activities as an attempt to charge my focus on doing more and avoid distractions.\\nFor the many times that I\'ve tried this, I burn out after a few weeks.\\nLeaving me useless for a number of days; having me to gather momentum again.\\n\\nI\'ve also attempted to cut down what I do. But this means I only have to focus on my full-time job and one other\\nactivity (could be a side-project or another gig). \\n_Three is a lot!_ But the secondary activity can mostly grow to the size of my full-time job bringing\\nme back to square one (doing a lot).\\n\\n> This could be me not being able to relax. Hopefully, it\'s not a medical condition. \ud83d\ude05\\n\\nI have been very experimental in ways to do more and still have enough time for personal and social activities.\\n\\n## Eureka\\n\\nEarlier last week, I was having a conversation with my partner on a project. I had to complete a 3D model.\\nI had started to work on this project many weeks ago but couldn\'t get back to it. I had also promised to be making\\nincremental\\nchanges. But other stuff were competing for my attention _(and they mostly won)_.\\n\\nNow, it was time to answer \\"How far?\\". I had to be honest.\\n\\nDuring the discussion, it just hit me I could hire someone on Fiverr to do this job.\\nI should have thought about that; if only I knew the concept of **delegation**. If only I had\\nit as one of my productivity techniques - we would have progress by now.\\n\\n## What it\'s worth\\n\\n> An average of about $300 for a freelance 3d artist.\\n\\nIs it worth delegating? I know a little much about modeling<sup>2</sup>.\\nBut it\'ll take me weeks of intermittent progress to complete this job. On aggregate, I could average spending about\\n10-12 hours on it.\\n\\nAn expert could spend a week (aggregate 6 hours) on it. And even apply best practices.\\nPaying $300 for this job will require me to work 6 hours<sup>2</sup> on my full-time job to make up for it. So let\'s\\ncompare!\\n\\nI do it myself; spend 10 hours and lose 500$ (worth of productivity) from my full-time job.\\nWhich means I\'ll be paying out of my pocket (say, money made from past work).\\n(And less likely to have production-ready quality)\\n\\nI delegate; I get (most probably, better) results in a sooner time, lose $300 but this money will be made while the work\\nwas being done.\\n\\n> I acknowledge that delegating does not always guarantee a good work will be done (without supervision).\\n\\n## Is it worth it?\\n\\nYou can only judge after you get any result.\\n\\nI think finding the right person to delegate a job to is critical to getting what\'s worth. \\nAnd you\'ll have to come up with methods to perform due diligence against candidates.\\n\\n_This is more like choosing your poison. (On many phases - whether to delegate and to whom)_\\n\\nBut I\'m going to close this thought with a quote from John C. Maxwell:\\n\\n> \\"If you want to do a few small things right, do them yourself. If you want to do great things and make a big impact, learn to delegate.\\"\\n\\n---\\n\\n<small><sup>1</sup> One being Adeton; my startup project. Another being Trot; a transport startup project. </small>\\n<br />\\n<small><sup>2</sup> Find some of my artworks here at <a href=\\"https://artstation.com/degreat\\">Artstation</a> </small>\\n<br />\\n<small><sup>3</sup> $50/hour is my rate currently.</small>"},{"id":"remote-work-developing-countries","metadata":{"permalink":"/blog/remote-work-developing-countries","source":"@site/blog/2022-05-11-remote-work.md","title":"Remote work and the possibilities for youths in developing countries","description":"Early 2020 I quit my on-site full-time developer role to become a freelancer.","date":"2022-05-11T00:00:00.000Z","formattedDate":"May 11, 2022","tags":[],"readingTime":3.455,"truncated":true,"authors":[],"frontMatter":{"slug":"remote-work-developing-countries","title":"Remote work and the possibilities for youths in developing countries","tags":[]},"prevItem":{"title":"Delegation","permalink":"/blog/delegation"}},"content":"Early 2020 I quit my on-site full-time developer role to become a freelancer.\\nFreelancing is the closest to what remote work is about.\\nMid 2021, I applied and got into [Andela](https://andela.com) and was assigned my first contract.\\nIn this blog post, I aim to share my experience and what it means for developers interested in remote/offshore\\nopportunities.\\n\\n\x3c!--truncate--\x3e\\n\\n## 2020\\n\\nThis is when I went full-time freelancing.\\nI was on a stable gig that lasted almost a year and also picked up a couple of other short term gigs.\\nMost of the time during this period I was shuffling through at most 2 gigs at the same time.\\nWithout revealing any specifics, I was basically doing fine financially, but I was hurting mentally.\\n\\nConstantly having to _context-switch_ between projects. Keeping up with deadlines while trying to have a life for\\nmyself.\\n\\n> \\"\u2026life for myself\\" means playing Fortnite<sup>1</sup> \ud83d\ude48\\n\\nFreelancing is great. You demand/negotiate your worth. Often in multiples your full-time job\'s equivalent.\\nYou define the scope, budget the time and resources. In short, you\'re the boss.\\n\\nBut freelancing also places you in the state of _survival_.\\nThat is, since you are never sure of a constant supply of clients, you have two options: charge more - limited client\\npool _or_ charge less - unlimited client pool.\\n\\n**I charged more** and provided very quality services besides just _code_.\\nBut I also ended up with clients that are fresh _techpreneurs_.\\nDealing with them was very overwhelming even though I was mostly educating and providing insights.\\n\\n## 2021\\n\\nPart of this year\'s resolution was to quit freelancing, build and launch my startup ([Adeton](https://adeton.io)), then\\nprepare to interview at Google.\\n\\nI lived off some savings during the first quarter while working on Adeton. I was beginning to run low on cash.\\nSo I was like _dammit_, I\'m going to apply for [Andela](https://andela.com)<sup>2</sup> and hopefully get a fulltime job\\nthen prepare for Google later.\\n\\nIt was until over a month I got matched with a company.\\n\\nI was going to be making lots of money. Lots, when I saw my offer.\\n\\n## Work scope\\n\\nNow this was the first time I was working for a company this huge. Had a sweet onboarding experience.\\nAnd work was being cut for me. I had tickets with clear descriptions to tackle. So what?\\n\\nSo I\'m going to say, compared to my freelancing experience, I was working a very small fraction but earning a huge\\nmultiple. My life was never the same. Now I had more focus, time and _money_.<sup>3</sup>\\n\\n## My life\\n\\nThis opportunity really opened my eyes to the possibilities of remote work. I thank God for the birth of this concept.\\nHow am I (located in Ghana \ud83c\uddec\ud83c\udded) able to work across the Pacific Ocean and have an impact on the lives of millions in\\nanother region?\\nIt\'s just so amazing.\\n\\nI have also been able to save a lot and can also afford a lot of things I want. I\'m also able to support my family.\\n\\n## What does it mean to you?\\n\\nI have a few ideas.\\n\\nTech opportunities in developing countries aren\'t lucrative.\\nMostly because founders struggle to fund the business and lack proper management and compensation schemes.\\n\\nAlso, there aren\'t a lot of companies that offer growth opportunities.\\n\\nWithout the knowledge of remote work _and what it can offer like good working environment and networking opportunities_,\\nyou\'ll be left scrambling for the next better option in your country which is just an iota of difference with the previous\\nopportunity.\\n\\nNow, for a lot of us, we learned this trade by unconventional means. We can code, very well. Mostly from scratch.\\nBut we have never seen codebases of larger organizations. How to architect and build dynamic services. How to handle\\nuser data. How to deal with tech debts, etc.\\n\\nLuckily, big organizations are offering remote opportunities. This is the chance. Take it!\\n\\n--- \\n\\n<small><sup>1</sup> I don\'t play Fortnite anymore.</small>\\n<br />\\n<small><sup>2</sup> This decision may have been partly influenced by a tweet I saw. I can\'t remember clearly.</small>\\n<br/>\\n<small><sup>3</sup> I was also commended by my lead to have exceeded expectations on delivery.</small>"}]}')}}]);